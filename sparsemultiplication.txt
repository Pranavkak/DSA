#include <iostream>

struct SparseMatrix {
    int row;
    int col;
    int value;
};

void multiplySparseMatrices(SparseMatrix arr1[], int size1, SparseMatrix arr2[], int size2) {
    if (arr1[0].col != arr2[0].row) {
        std::cout << "Invalid matrices for multiplication" << std::endl;
        return;
    }

    SparseMatrix result[size1 * size2];
    int k = 0;

    for (int i = 0; i < size1; i++) {
        for (int j = 0; j < size2; j++) {
            if (arr1[i].col == arr2[j].row) {
                result[k].row = arr1[i].row;
                result[k].col = arr2[j].col;
                result[k].value = arr1[i].value * arr2[j].value;
                k++;
            }
        }
    }

    std::cout << "Multiplication: " << std::endl;
    for (int i = 0; i < k; i++) {
        std::cout << result[i].row << " " << result[i].col << " " << result[i].value << std::endl;
    }
}

int main() {
    SparseMatrix arr1[] = {{0, 1, 3},
                           {1, 0, 2}};

    int size1 = sizeof(arr1) / sizeof(arr1[0]);

    SparseMatrix arr2[] = {{0, 0, 4},
                           {0, 1, 5}};

    int size2 = sizeof(arr2) / sizeof(arr2[0]);

    multiplySparseMatrices(arr1, size1, arr2, size2);

    return 0;
}
