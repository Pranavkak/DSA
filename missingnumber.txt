#include <iostream>
using namespace std;

int findMissingNumber(int arr[], int n) {
    int low = 0, high = n - 1;
    
    // Check if the first element is missing
    if (arr[0] != 0)
        return 0;

    // Binary search to find the missing number
    while (low <= high) {
        int mid = low + (high - low) / 2;

        // Check if the element after mid is missing
        if (arr[mid] + 1 != arr[mid + 1])
            return arr[mid] + 1;
        
        // If the missing number is on the right side, update the low pointer
        if (arr[mid] == mid)
            low = mid + 1;
        
        // Otherwise, the missing number is on the left side, update the high pointer
        else
            high = mid - 1;
    }

    // If no missing number found, return -1
    return -1;
}

int main() {
    int arr[] = {1, 2, 3, 4, 5, 7}; // Example sorted array
    int n = sizeof(arr) / sizeof(arr[0]);

    int missingNumber = findMissingNumber(arr, n);
    if (missingNumber != -1)
        cout << "Missing number: " << missingNumber << endl;
    else
        cout << "No missing number found." << endl;

    return 0;
}
