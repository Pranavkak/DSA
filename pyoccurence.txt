class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def insert(self, data):
        new_node = Node(data)
        if self.head is None:
            self.head = new_node
        else:
            curr_node = self.head
            while curr_node.next:
                curr_node = curr_node.next
            curr_node.next = new_node

    def count_and_delete(self, key):
        if self.head is None:
            return 0

        curr_node = self.head
        prev_node = None
        count = 0

        while curr_node:
            if curr_node.data == key:
                count += 1
                if prev_node:
                    prev_node.next = curr_node.next
                else:
                    self.head = curr_node.next
            else:
                prev_node = curr_node
            curr_node = curr_node.next

        return count

    def display(self):
        curr_node = self.head
        while curr_node:
            print(curr_node.data, end=" ")
            curr_node = curr_node.next
        print()

# Sample data
linked_list = LinkedList()
linked_list.insert(1)
linked_list.insert(2)
linked_list.insert(1)
linked_list.insert(2)
linked_list.insert(1)
linked_list.insert(3)
linked_list.insert(1)
linked_list.display()

key = 1
count = linked_list.count_and_delete(key)
linked_list.display()
print("Count:", count)
