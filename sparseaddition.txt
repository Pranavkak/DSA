#include <iostream>

struct SparseMatrix {
    int row;
    int col;
    int value;
};

void addSparseMatrices(SparseMatrix arr1[], int size1, SparseMatrix arr2[], int size2) {
    int i = 0, j = 0, k = 0;
    SparseMatrix result[size1 + size2];

    while (i < size1 && j < size2) {
        if (arr1[i].row < arr2[j].row || (arr1[i].row == arr2[j].row && arr1[i].col < arr2[j].col)) {
            result[k].row = arr1[i].row;
            result[k].col = arr1[i].col;
            result[k].value = arr1[i].value;
            i++;
        } else if (arr1[i].row > arr2[j].row || (arr1[i].row == arr2[j].row && arr1[i].col > arr2[j].col)) {
            result[k].row = arr2[j].row;
            result[k].col = arr2[j].col;
            result[k].value = arr2[j].value;
            j++;
        } else {
            result[k].row = arr1[i].row;
            result[k].col = arr1[i].col;
            result[k].value = arr1[i].value + arr2[j].value;
            i++;
            j++;
        }
        k++;
    }

    while (i < size1) {
        result[k].row = arr1[i].row;
        result[k].col = arr1[i].col;
        result[k].value = arr1[i].value;
        i++;
        k++;
    }

    while (j < size2) {
        result[k].row = arr2[j].row;
        result[k].col = arr2[j].col;
        result[k].value = arr2[j].value;
        j++;
        k++;
    }

    std::cout << "Addition: " << std::endl;
    for (int i = 0; i < k; i++) {
        std::cout << result[i].row << " " << result[i].col << " " << result[i].value << std::endl;
    }
}

int main() {
    SparseMatrix arr1[] = {{0, 1, 3},
                           {0, 4, 7},
                           {1, 0, 2},
                           {1, 3, 8}};

    int size1 = sizeof(arr1) / sizeof(arr1[0]);

    SparseMatrix arr2[] = {{0, 1, 1},
                           {0, 3, 2},
                           {1, 0, 4},
                           {1, 4, 5}};

    int size2 = sizeof(arr2) / sizeof(arr2[0]);

    addSparseMatrices(arr1, size1, arr2, size2);

    return 0;
}
