#include <iostream>
#include <stack>
#include <string>

bool isBalancedExpression(const std::string& expression) {
    std::stack<char> stk;

    for (char ch : expression) {
        if (ch == '(' || ch == '[' || ch == '{') {
            stk.push(ch);
        } else if (ch == ')' || ch == ']' || ch == '}') {
            if (stk.empty())
                return false;

            char top = stk.top();
            stk.pop();

            if ((ch == ')' && top != '(') || (ch == ']' && top != '[') || (ch == '}' && top != '{'))
                return false;
        }
    }

    return stk.empty();
}

int main() {
    std::string expression;
    std::cout << "Enter an expression: ";
    std::cin >> expression;

    bool balanced = isBalancedExpression(expression);
    if (balanced)
        std::cout << "The expression has balanced parentheses." << std::endl;
    else
        std::cout << "The expression does not have balanced parentheses." << std::endl;

    return 0;
}
